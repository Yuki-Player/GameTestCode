//set a player control

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Player : MonoBehaviour
{
    public float speed = 10.0f;

    public Animator anim;

    public LayerMask ground;
    public Collider2D colli;
    public Text CherryNum;
    public float hitForce=2.0f;
    public bool isHurt;



    //跳跃定义
    //引入刚体组件
    private Rigidbody2D rdby;
    //跳跃力
    public float JumpForce = 10f;
    public int Cherry;
    void Start()
    {

        rdby = GetComponent<Rigidbody2D>();
        anim.SetBool("isHurt", false);
    }

    // Update is called once per frame
    void Update()
    {

        Jump();
    }
    void FixedUpdate()
    {


        Move();
        SwitchAnim();
    }
    void Move()
    {
        float h = Input.GetAxis("Horizontal");
        transform.Translate(Vector3.right * h * speed * Time.deltaTime, Space.World);
        if (h < 0)
        {
            transform.localScale = new Vector3(-1, 1, 1);
            anim.SetFloat("running", 1);
        }
        else if (h > 0)
        {
            transform.localScale = new Vector3(1, 1, 1);
            anim.SetFloat("running", 1);
        }
        else
        {
            anim.SetFloat("running", 0);
        }

    }
    void Jump()
    {
        if (Input.GetButtonDown("Jump") && colli.IsTouchingLayers(ground))
        {
            rdby.velocity = new Vector2(rdby.velocity.x, JumpForce * Time.deltaTime);
            anim.SetBool("jumping", true);
        }

    }
    void SwitchAnim()
    {
        if(rdby.velocity.y<0.1f && !colli.IsTouchingLayers(ground))
        {
            anim.SetBool("falling", true);
        }

        if (anim.GetBool("jumping"))
        {
            if (rdby.velocity.y < 0)
            {
                anim.SetBool("jumping", false);
                anim.SetBool("falling", true);
            }

        }

        else if(isHurt==true)
        {
            if(Mathf.Abs( rdby.velocity.x)<0.1f)
            {
                anim.SetBool("isHurt", false);
                anim.SetBool("idle", true);

            }

        }
        else if (colli.IsTouchingLayers(ground))
        {
            anim.SetBool("falling", false);

            anim.SetBool("idle", true);

        }
    }
    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.tag == "collection")
        {
            Destroy(collision.gameObject);
            Cherry += 1;
            CherryNum.text = Cherry.ToString();
        }
    }
    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.tag == "Enemy")
        {
            if (anim.GetBool("falling") == true)
            {

                {
                    Destroy(collision.gameObject);

                }

             }
            else if(collision.gameObject.transform.position.x<transform.position.x)
            {
                rdby.velocity = new Vector2(rdby.velocity.x + hitForce, JumpForce * Time.deltaTime);
                anim.SetBool("isHurt", true);
                isHurt = true;
            }
            else if(  collision.gameObject.transform.position.x > transform.position.x)
            {
                rdby.velocity = new Vector2(rdby.velocity.x - hitForce, JumpForce * Time.deltaTime);
                anim.SetBool("isHurt", true);
                isHurt = true;
            }

        }
    }
}
